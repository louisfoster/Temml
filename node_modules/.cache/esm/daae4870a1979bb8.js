let defineFunction,mathMLTree,stretchy,mml;_a19‍.w("../defineFunction",[["default",["defineFunction"],function(v){defineFunction=v}]]);_a19‍.w("../mathMLTree",[["default",["mathMLTree"],function(v){mathMLTree=v}]]);_a19‍.w("../stretchy",[["default",["stretchy"],function(v){stretchy=v}]]);_a19‍.w("../buildMathML",[["*",null,function(v){mml=v}]]);





defineFunction({
  type: "accentUnder",
  names: [
    "\\underleftarrow",
    "\\underrightarrow",
    "\\underleftrightarrow",
    "\\undergroup",
    "\\underparen",
    "\\utilde"
  ],
  props: {
    numArgs: 1
  },
  handler: ({ parser, funcName }, args) => {
    const base = args[0];
    return {
      type: "accentUnder",
      mode: parser.mode,
      label: funcName,
      base: base
    };
  },
  mathmlBuilder: (group, style) => {
    const accentNode = stretchy.mathMLnode(group.label);
    const node = new mathMLTree.MathNode("munder", [
      mml.buildGroup(group.base, style),
      accentNode
    ]);
    node.setAttribute("accentunder", "true");
    return node;
  }
});
